<ref *2> IncomingMessage {

_readableState: ReadableState {

objectMode: false,

highWaterMark: 16384,

buffer: BufferList { head: [Object], tail: [Object], length: 1 },

length: 121,

pipes: [],

flowing: null,

ended: true,

endEmitted: false,

reading: false,

constructed: true,

sync: true,

needReadable: false,

emittedReadable: false,

readableListening: false,

resumeScheduled: false,

errorEmitted: false,

emitClose: true,

autoDestroy: true,

destroyed: false,

errored: null,

closed: false,

closeEmitted: false,

defaultEncoding: 'utf8',

awaitDrainWriters: null,

multiAwaitDrain: false,

readingMore: true,

dataEmitted: false,

decoder: null,

encoding: null,

[Symbol(kPaused)]: null

},

_events: [Object: null prototype] { end: [Function: clearRequestTimeout] },

_eventsCount: 1,

_maxListeners: undefined,

socket: <ref *1> Socket {

connecting: false,

_hadError: false,

_parent: null,

_host: null,

_readableState: ReadableState {

objectMode: false,

highWaterMark: 16384,

buffer: BufferList { head: null, tail: null, length: 0 },

length: 0,

pipes: [],

flowing: true,

ended: false,

endEmitted: false,

reading: true,

constructed: true,

sync: false,

needReadable: true,

emittedReadable: false,

readableListening: false,

resumeScheduled: false,

errorEmitted: false,

emitClose: false,

autoDestroy: true,

destroyed: false,

errored: null,

closed: false,

closeEmitted: false,

defaultEncoding: 'utf8',

awaitDrainWriters: null,

multiAwaitDrain: false,

readingMore: false,

dataEmitted: false,

decoder: null,

encoding: null,

[Symbol(kPaused)]: false

},

_events: [Object: null prototype] {

end: [Array],

timeout: [Function: socketOnTimeout],

data: [Function: bound socketOnData],

error: [Array],

close: [Array],

drain: [Function: bound socketOnDrain],

resume: [Function: onSocketResume],

pause: [Function: onSocketPause]

},

_eventsCount: 8,

_maxListeners: undefined,

_writableState: WritableState {

objectMode: false,

highWaterMark: 16384,

finalCalled: false,

needDrain: false,

ending: false,

ended: false,

finished: false,

destroyed: false,

decodeStrings: false,

defaultEncoding: 'utf8',

length: 0,

writing: false,

corked: 0,

sync: true,

bufferProcessing: false,

onwrite: [Function: bound onwrite],

writecb: null,

writelen: 0,

afterWriteTickInfo: null,

buffered: [],

bufferedIndex: 0,

allBuffers: true,

allNoop: true,

pendingcb: 0,

constructed: true,

prefinished: false,

errorEmitted: false,

emitClose: false,

autoDestroy: true,

errored: null,

closed: false,

closeEmitted: false,

[Symbol(kOnFinished)]: []

},

allowHalfOpen: true,

_sockname: null,

_pendingData: null,

_pendingEncoding: '',

server: Server {

maxHeaderSize: undefined,

insecureHTTPParser: undefined,

_events: [Object: null prototype],

_eventsCount: 4,

_maxListeners: undefined,

_connections: 2,

_handle: [TCP],

_usingWorkers: false,

_workers: [],

_unref: false,

allowHalfOpen: true,

pauseOnConnect: false,

noDelay: false,

keepAlive: false,

keepAliveInitialDelay: 0,

httpAllowHalfOpen: false,

timeout: 0,

keepAliveTimeout: 5000,

maxHeadersCount: null,

maxRequestsPerSocket: 0,

headersTimeout: 60000,

requestTimeout: 0,

_connectionKey: '6::::667',

[Symbol(IncomingMessage)]: [Function: IncomingMessage],

[Symbol(ServerResponse)]: [Function: ServerResponse],

[Symbol(kCapture)]: false,

[Symbol(async_id_symbol)]: 14

},

_server: Server {

maxHeaderSize: undefined,

insecureHTTPParser: undefined,

_events: [Object: null prototype],

_eventsCount: 4,

_maxListeners: undefined,

_connections: 2,

_handle: [TCP],

_usingWorkers: false,

_workers: [],

_unref: false,

allowHalfOpen: true,

pauseOnConnect: false,

noDelay: false,

keepAlive: false,

keepAliveInitialDelay: 0,

httpAllowHalfOpen: false,

timeout: 0,

keepAliveTimeout: 5000,

maxHeadersCount: null,

maxRequestsPerSocket: 0,

headersTimeout: 60000,

requestTimeout: 0,

_connectionKey: '6::::667',

[Symbol(IncomingMessage)]: [Function: IncomingMessage],

[Symbol(ServerResponse)]: [Function: ServerResponse],

[Symbol(kCapture)]: false,

[Symbol(async_id_symbol)]: 14

},

parser: HTTPParser {

'0': [Function: bound setRequestTimeout],

'1': [Function: parserOnHeaders],

'2': [Function: parserOnHeadersComplete],

'3': [Function: parserOnBody],

'4': [Function: parserOnMessageComplete],

'5': [Function: bound onParserExecute],

'6': [Function: bound onParserTimeout],

_headers: [],

_url: '',

socket: [Circular *1],

incoming: [Circular *2],

outgoing: null,

maxHeaderPairs: 2000,

_consumed: true,

onIncoming: [Function: bound parserOnIncoming],

[Symbol(resource_symbol)]: [HTTPServerAsyncResource]

},

on: [Function: socketListenerWrap],

addListener: [Function: socketListenerWrap],

prependListener: [Function: socketListenerWrap],

setEncoding: [Function: socketSetEncoding],

_paused: false,

_httpMessage: ServerResponse {

_events: [Object: null prototype],

_eventsCount: 2,

_maxListeners: undefined,

outputData: [],

outputSize: 0,

writable: true,

destroyed: false,

_last: false,

chunkedEncoding: false,

shouldKeepAlive: true,

maxRequestsOnConnectionReached: false,

_defaultKeepAlive: true,

useChunkedEncodingByDefault: true,

sendDate: true,

_removedConnection: false,

_removedContLen: false,

_removedTE: false,

_contentLength: null,

_hasBody: true,

_trailer: '',

finished: false,

_headerSent: false,

_closed: false,

socket: [Circular *1],

_header: null,

_keepAliveTimeout: 5000,

_onPendingData: [Function: bound updateOutgoingData],

req: [Circular *2],

_sent100: false,

_expect_continue: false,

locals: [Object: null prototype] {},

_startAt: undefined,

_startTime: undefined,

writeHead: [Function: writeHead],

__onFinished: [Function],

[Symbol(kCapture)]: false,

[Symbol(kNeedDrain)]: false,

[Symbol(corked)]: 0,

[Symbol(kOutHeaders)]: [Object: null prototype]

},

_peername: { address: '::ffff:172.18.0.1', family: 'IPv6', port: 62600 },

[Symbol(async_id_symbol)]: 60,

[Symbol(kHandle)]: TCP {

reading: true,

onconnection: null,

_consumed: true,

[Symbol(owner_symbol)]: [Circular *1]

},

[Symbol(lastWriteQueueSize)]: 0,

[Symbol(timeout)]: null,

[Symbol(kBuffer)]: null,

[Symbol(kBufferCb)]: null,

[Symbol(kBufferGen)]: null,

[Symbol(kCapture)]: false,

[Symbol(kSetNoDelay)]: false,

[Symbol(kSetKeepAlive)]: false,

[Symbol(kSetKeepAliveInitialDelay)]: 0,

[Symbol(kBytesRead)]: 0,

[Symbol(kBytesWritten)]: 0,

[Symbol(RequestTimeout)]: undefined

},

httpVersionMajor: 1,

httpVersionMinor: 1,

httpVersion: '1.1',

complete: true,

rawHeaders: [

'Host',

'10.4.7.7:667',

'Connection',

'keep-alive',

'Content-Length',

'121',

'Pragma',

'no-cache',

'Cache-Control',

'no-cache',

'User-Agent',

'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.0.0 Safari/537.36',

'x-xsrf-token',

'1a521e749511364cfe9c4f617684fede82b6126873c618c94c702ff5d358d473da059f7ac01391c85c18f7bfb78bba3c48f07589c3dccec62cfeab1ce9911e24',

'Content-Type',

'text/plain;charset=UTF-8',

'Accept',

'*/*',

'Origin',

'http://10.4.7.7:3000',

'Referer',

'http://10.4.7.7:3000/',

'Accept-Encoding',

'gzip, deflate',

'Accept-Language',

'fr-FR,fr;q=0.9,en-US;q=0.8,en;q=0.7',

'Cookie',

'access_token=eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEwMDEsInhzcmZUb2tlbiI6IjFhNTIxZTc0OTUxMTM2NGNmZTljNGY2MTc2ODRmZWRlODJiNjEyNjg3M2M2MThjOTRjNzAyZmY1ZDM1OGQ0NzNkYTA1OWY3YWMwMTM5MWM4NWMxOGY3YmZiNzhiYmEzYzQ4ZjA3NTg5YzNkY2NlYzYyY2ZlYWIxY2U5OTExZTI0IiwiaWF0IjoxNjU0MjUxMjgxLCJleHAiOjMzMDg1MjA1NjIsInN1YiI6ImJnZyJ9.6KywAK7yhq7nI0hCO7V45yxtb57_uNJrqLH78L2x9F59PTAQRJ3nMd0qyD_mutdI25pG-YyjT9JcZzWNA-DiXA'

],

rawTrailers: [],

aborted: false,

upgrade: false,

url: '/completeProfile',

method: 'POST',

statusCode: null,

statusMessage: null,

client: <ref *1> Socket {

connecting: false,

_hadError: false,

_parent: null,

_host: null,

_readableState: ReadableState {

objectMode: false,

highWaterMark: 16384,

buffer: BufferList { head: null, tail: null, length: 0 },

length: 0,

pipes: [],

flowing: true,

ended: false,

endEmitted: false,

reading: true,

constructed: true,

sync: false,

needReadable: true,

emittedReadable: false,

readableListening: false,

resumeScheduled: false,

errorEmitted: false,

emitClose: false,

autoDestroy: true,

destroyed: false,

errored: null,

closed: false,

closeEmitted: false,

defaultEncoding: 'utf8',

awaitDrainWriters: null,

multiAwaitDrain: false,

readingMore: false,

dataEmitted: false,

decoder: null,

encoding: null,

[Symbol(kPaused)]: false

},

_events: [Object: null prototype] {

end: [Array],

timeout: [Function: socketOnTimeout],

data: [Function: bound socketOnData],

error: [Array],

close: [Array],

drain: [Function: bound socketOnDrain],

resume: [Function: onSocketResume],

pause: [Function: onSocketPause]

},

_eventsCount: 8,

_maxListeners: undefined,

_writableState: WritableState {

objectMode: false,

highWaterMark: 16384,

finalCalled: false,

needDrain: false,

ending: false,

ended: false,

finished: false,

destroyed: false,

decodeStrings: false,

defaultEncoding: 'utf8',

length: 0,

writing: false,

corked: 0,

sync: true,

bufferProcessing: false,

onwrite: [Function: bound onwrite],

writecb: null,

writelen: 0,

afterWriteTickInfo: null,

buffered: [],

bufferedIndex: 0,

allBuffers: true,

allNoop: true,

pendingcb: 0,

constructed: true,

prefinished: false,

errorEmitted: false,

emitClose: false,

autoDestroy: true,

errored: null,

closed: false,

closeEmitted: false,

[Symbol(kOnFinished)]: []

},

allowHalfOpen: true,

_sockname: null,

_pendingData: null,

_pendingEncoding: '',

server: Server {

maxHeaderSize: undefined,

insecureHTTPParser: undefined,

_events: [Object: null prototype],

_eventsCount: 4,

_maxListeners: undefined,

_connections: 2,

_handle: [TCP],

_usingWorkers: false,

_workers: [],

_unref: false,

allowHalfOpen: true,

pauseOnConnect: false,

noDelay: false,

keepAlive: false,

keepAliveInitialDelay: 0,

httpAllowHalfOpen: false,

timeout: 0,

keepAliveTimeout: 5000,

maxHeadersCount: null,

maxRequestsPerSocket: 0,

headersTimeout: 60000,

requestTimeout: 0,

_connectionKey: '6::::667',

[Symbol(IncomingMessage)]: [Function: IncomingMessage],

[Symbol(ServerResponse)]: [Function: ServerResponse],

[Symbol(kCapture)]: false,

[Symbol(async_id_symbol)]: 14

},

_server: Server {

maxHeaderSize: undefined,

insecureHTTPParser: undefined,

_events: [Object: null prototype],

_eventsCount: 4,

_maxListeners: undefined,

_connections: 2,

_handle: [TCP],

_usingWorkers: false,

_workers: [],

_unref: false,

allowHalfOpen: true,

pauseOnConnect: false,

noDelay: false,

keepAlive: false,

keepAliveInitialDelay: 0,

httpAllowHalfOpen: false,

timeout: 0,

keepAliveTimeout: 5000,

maxHeadersCount: null,

maxRequestsPerSocket: 0,

headersTimeout: 60000,

requestTimeout: 0,

_connectionKey: '6::::667',

[Symbol(IncomingMessage)]: [Function: IncomingMessage],

[Symbol(ServerResponse)]: [Function: ServerResponse],

[Symbol(kCapture)]: false,

[Symbol(async_id_symbol)]: 14

},

parser: HTTPParser {

'0': [Function: bound setRequestTimeout],

'1': [Function: parserOnHeaders],

'2': [Function: parserOnHeadersComplete],

'3': [Function: parserOnBody],

'4': [Function: parserOnMessageComplete],

'5': [Function: bound onParserExecute],

'6': [Function: bound onParserTimeout],

_headers: [],

_url: '',

socket: [Circular *1],

incoming: [Circular *2],

outgoing: null,

maxHeaderPairs: 2000,

_consumed: true,

onIncoming: [Function: bound parserOnIncoming],

[Symbol(resource_symbol)]: [HTTPServerAsyncResource]

},

on: [Function: socketListenerWrap],

addListener: [Function: socketListenerWrap],

prependListener: [Function: socketListenerWrap],

setEncoding: [Function: socketSetEncoding],

_paused: false,

_httpMessage: ServerResponse {

_events: [Object: null prototype],

_eventsCount: 2,

_maxListeners: undefined,

outputData: [],

outputSize: 0,

writable: true,

destroyed: false,

_last: false,

chunkedEncoding: false,

shouldKeepAlive: true,

maxRequestsOnConnectionReached: false,

_defaultKeepAlive: true,

useChunkedEncodingByDefault: true,

sendDate: true,

_removedConnection: false,

_removedContLen: false,

_removedTE: false,

_contentLength: null,

_hasBody: true,

_trailer: '',

finished: false,

_headerSent: false,

_closed: false,

socket: [Circular *1],

_header: null,

_keepAliveTimeout: 5000,

_onPendingData: [Function: bound updateOutgoingData],

req: [Circular *2],

_sent100: false,

_expect_continue: false,

locals: [Object: null prototype] {},

_startAt: undefined,

_startTime: undefined,

writeHead: [Function: writeHead],

__onFinished: [Function],

[Symbol(kCapture)]: false,

[Symbol(kNeedDrain)]: false,

[Symbol(corked)]: 0,

[Symbol(kOutHeaders)]: [Object: null prototype]

},

_peername: { address: '::ffff:172.18.0.1', family: 'IPv6', port: 62600 },

[Symbol(async_id_symbol)]: 60,

[Symbol(kHandle)]: TCP {

reading: true,

onconnection: null,

_consumed: true,

[Symbol(owner_symbol)]: [Circular *1]

},

[Symbol(lastWriteQueueSize)]: 0,

[Symbol(timeout)]: null,

[Symbol(kBuffer)]: null,

[Symbol(kBufferCb)]: null,

[Symbol(kBufferGen)]: null,

[Symbol(kCapture)]: false,

[Symbol(kSetNoDelay)]: false,

[Symbol(kSetKeepAlive)]: false,

[Symbol(kSetKeepAliveInitialDelay)]: 0,

[Symbol(kBytesRead)]: 0,

[Symbol(kBytesWritten)]: 0,

[Symbol(RequestTimeout)]: undefined

},

_consuming: false,

_dumped: false,

next: [Function: next],

baseUrl: '/users',

originalUrl: '/users/completeProfile',

_parsedUrl: Url {

protocol: null,

slashes: null,

auth: null,

host: null,

port: null,

hostname: null,

hash: null,

search: null,

query: null,

pathname: '/completeProfile',

path: '/completeProfile',

href: '/completeProfile',

_raw: '/completeProfile'

},

params: {},

query: {},

res: <ref *3> ServerResponse {

_events: [Object: null prototype] {

finish: [Array],

end: [Function: onevent]

},

_eventsCount: 2,

_maxListeners: undefined,

outputData: [],

outputSize: 0,

writable: true,

destroyed: false,

_last: false,

chunkedEncoding: false,

shouldKeepAlive: true,

maxRequestsOnConnectionReached: false,

_defaultKeepAlive: true,

useChunkedEncodingByDefault: true,

sendDate: true,

_removedConnection: false,

_removedContLen: false,

_removedTE: false,

_contentLength: null,

_hasBody: true,

_trailer: '',

finished: false,

_headerSent: false,

_closed: false,

socket: <ref *1> Socket {

connecting: false,

_hadError: false,

_parent: null,

_host: null,

_readableState: [ReadableState],

_events: [Object: null prototype],

_eventsCount: 8,

_maxListeners: undefined,

_writableState: [WritableState],

allowHalfOpen: true,

_sockname: null,

_pendingData: null,

_pendingEncoding: '',

server: [Server],

_server: [Server],

parser: [HTTPParser],

on: [Function: socketListenerWrap],

addListener: [Function: socketListenerWrap],

prependListener: [Function: socketListenerWrap],

setEncoding: [Function: socketSetEncoding],

_paused: false,

_httpMessage: [Circular *3],

_peername: [Object],

[Symbol(async_id_symbol)]: 60,

[Symbol(kHandle)]: [TCP],

[Symbol(lastWriteQueueSize)]: 0,

[Symbol(timeout)]: null,

[Symbol(kBuffer)]: null,

[Symbol(kBufferCb)]: null,

[Symbol(kBufferGen)]: null,

[Symbol(kCapture)]: false,

[Symbol(kSetNoDelay)]: false,

[Symbol(kSetKeepAlive)]: false,

[Symbol(kSetKeepAliveInitialDelay)]: 0,

[Symbol(kBytesRead)]: 0,

[Symbol(kBytesWritten)]: 0,

[Symbol(RequestTimeout)]: undefined

},

_header: null,

_keepAliveTimeout: 5000,

_onPendingData: [Function: bound updateOutgoingData],

req: [Circular *2],

_sent100: false,

_expect_continue: false,

locals: [Object: null prototype] {},

_startAt: undefined,

_startTime: undefined,

writeHead: [Function: writeHead],

__onFinished: [Function: listener] { queue: [Array] },

[Symbol(kCapture)]: false,

[Symbol(kNeedDrain)]: false,

[Symbol(corked)]: 0,

[Symbol(kOutHeaders)]: [Object: null prototype] {

'x-powered-by': [Array],

'access-control-allow-origin': [Array],

vary: [Array],

'access-control-allow-credentials': [Array]

}

},

_startAt: [ 8831, 588903096 ],

_startTime: 2022-06-03T10:25:11.159Z,

_remoteAddress: '::ffff:172.18.0.1',

body: {},

secret: undefined,

cookies: {

access_token: 'eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEwMDEsInhzcmZUb2tlbiI6IjFhNTIxZTc0OTUxMTM2NGNmZTljNGY2MTc2ODRmZWRlODJiNjEyNjg3M2M2MThjOTRjNzAyZmY1ZDM1OGQ0NzNkYTA1OWY3YWMwMTM5MWM4NWMxOGY3YmZiNzhiYmEzYzQ4ZjA3NTg5YzNkY2NlYzYyY2ZlYWIxY2U5OTExZTI0IiwiaWF0IjoxNjU0MjUxMjgxLCJleHAiOjMzMDg1MjA1NjIsInN1YiI6ImJnZyJ9.6KywAK7yhq7nI0hCO7V45yxtb57_uNJrqLH78L2x9F59PTAQRJ3nMd0qyD_mutdI25pG-YyjT9JcZzWNA-DiXA'

},

signedCookies: [Object: null prototype] {},

user: {

id: 1001,

username: 'bgg',

lastname: 'depauw',

firstname: 'eliott',

email: 'eliott.dpw@gmail.com',

password: '$2b$10$Fu1BFug4tBB7g5ZEZnweMeDKWLjTHIbzzK3mnIb4xTsFmTnlu8KWq',

orientationId: null,

bio: null,

dms: null,

age: null,

locationX: null,

locationY: null,

tags: null,

image: null,

score: null,

meLikeUsers: null,

userLikesMe: null,

matchs: null,

subToken: '0'

},

route: Route {

path: '/completeProfile',

stack: [ [Layer] ],

methods: { post: true }

},

[Symbol(kCapture)]: false,

[Symbol(kHeaders)]: {

host: '10.4.7.7:667',

connection: 'keep-alive',

'content-length': '121',

pragma: 'no-cache',

'cache-control': 'no-cache',

'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.0.0 Safari/537.36',

'x-xsrf-token': '1a521e749511364cfe9c4f617684fede82b6126873c618c94c702ff5d358d473da059f7ac01391c85c18f7bfb78bba3c48f07589c3dccec62cfeab1ce9911e24',

'content-type': 'text/plain;charset=UTF-8',

accept: '*/*',

origin: 'http://10.4.7.7:3000',

referer: 'http://10.4.7.7:3000/',

'accept-encoding': 'gzip, deflate',

'accept-language': 'fr-FR,fr;q=0.9,en-US;q=0.8,en;q=0.7',

cookie: 'access_token=eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEwMDEsInhzcmZUb2tlbiI6IjFhNTIxZTc0OTUxMTM2NGNmZTljNGY2MTc2ODRmZWRlODJiNjEyNjg3M2M2MThjOTRjNzAyZmY1ZDM1OGQ0NzNkYTA1OWY3YWMwMTM5MWM4NWMxOGY3YmZiNzhiYmEzYzQ4ZjA3NTg5YzNkY2NlYzYyY2ZlYWIxY2U5OTExZTI0IiwiaWF0IjoxNjU0MjUxMjgxLCJleHAiOjMzMDg1MjA1NjIsInN1YiI6ImJnZyJ9.6KywAK7yhq7nI0hCO7V45yxtb57_uNJrqLH78L2x9F59PTAQRJ3nMd0qyD_mutdI25pG-YyjT9JcZzWNA-DiXA'

},

[Symbol(kHeadersCount)]: 28,

[Symbol(kTrailers)]: null,

[Symbol(kTrailersCount)]: 0,

[Symbol(RequestTimeout)]: undefined

}